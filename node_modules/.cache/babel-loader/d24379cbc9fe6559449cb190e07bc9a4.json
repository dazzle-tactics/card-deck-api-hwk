{"ast":null,"code":"var _jsxFileName = \"/Users/robertpallot/Desktop/Codeclan/codeclan_work/week_07/day_5/deck-of-cards/src/containers/DeckContainer.js\",\n    _s = $RefreshSig$();\n\nimport { render } from \"@testing-library/react\";\nimport React, { useState, useEffect } from \"react\";\nimport CardList from \"../components/CardList\";\nimport Hand from \"../components/Hand\";\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DeckContainer = () => {\n  _s();\n\n  const [deck, setDeck] = useState([]);\n  const [hand, setHand] = useState([]);\n  useEffect(() => {\n    getDeck();\n  }, []);\n\n  const getDeck = function () {\n    fetch('https://deckofcardsapi.com/api/deck/new/draw/?count=52').then(res => res.json()).then(data => setDeck(data.cards));\n  };\n\n  const addToHand = function (card) {\n    let newHand = [...hand, card];\n    let uniqueNewHand = Array.from(new Set(newHand));\n    setHand(uniqueNewHand);\n  };\n\n  const removeFromDeck = function (card) {\n    let newDeck = deck;\n    newDeck.splice(card, 1);\n    setDeck(newDeck);\n  };\n\n  const moveFromDeckToHand = function (card) {\n    addToHand(card).then(removeFromDeck(card));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Hand:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Hand, {\n      hand: hand,\n      className: \"deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Card List:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardList, {\n      deck: deck,\n      addToHand: addToHand,\n      removeFromDeck: removeFromDeck,\n      moveFromDeckToHand: moveFromDeckToHand,\n      className: \"deck\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DeckContainer, \"n3Mb4a7D2+XgKGWMi//yKRF69Iw=\");\n\n_c = DeckContainer;\nexport default DeckContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckContainer\");","map":{"version":3,"sources":["/Users/robertpallot/Desktop/Codeclan/codeclan_work/week_07/day_5/deck-of-cards/src/containers/DeckContainer.js"],"names":["render","React","useState","useEffect","CardList","Hand","DeckContainer","deck","setDeck","hand","setHand","getDeck","fetch","then","res","json","data","cards","addToHand","card","newHand","uniqueNewHand","Array","from","Set","removeFromDeck","newDeck","splice","moveFromDeckToHand"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,wBAAvB;AACA,OAAOC,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAO,WAAP;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAExB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,OAAO;AACV,GAFQ,EAEN,EAFM,CAAT;;AAKA,QAAMA,OAAO,GAAG,YAAU;AACtBC,IAAAA,KAAK,CAAC,wDAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,IAAI,IAAIR,OAAO,CAACQ,IAAI,CAACC,KAAN,CAFrB;AAGH,GAJD;;AAMA,QAAMC,SAAS,GAAG,UAASC,IAAT,EAAc;AAC5B,QAAIC,OAAO,GAAG,CAAC,GAAGX,IAAJ,EAAUU,IAAV,CAAd;AACA,QAAIE,aAAa,GAAGC,KAAK,CAACC,IAAN,CAAW,IAAIC,GAAJ,CAAQJ,OAAR,CAAX,CAApB;AACAV,IAAAA,OAAO,CAACW,aAAD,CAAP;AACH,GAJD;;AAMA,QAAMI,cAAc,GAAG,UAASN,IAAT,EAAc;AACjC,QAAIO,OAAO,GAAGnB,IAAd;AACAmB,IAAAA,OAAO,CAACC,MAAR,CAAeR,IAAf,EAAoB,CAApB;AACAX,IAAAA,OAAO,CAACkB,OAAD,CAAP;AACH,GAJD;;AAMA,QAAME,kBAAkB,GAAG,UAAST,IAAT,EAAc;AACrCD,IAAAA,SAAS,CAACC,IAAD,CAAT,CACCN,IADD,CACMY,cAAc,CAACN,IAAD,CADpB;AAEH,GAHD;;AAKA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEV,IAAZ;AAAkB,MAAA,SAAS,EAAC;AAA5B;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEF,IAAhB;AAAsB,MAAA,SAAS,EAAEW,SAAjC;AAA4C,MAAA,cAAc,EAAEO,cAA5D;AAA4E,MAAA,kBAAkB,EAAEG,kBAAhG;AAAoH,MAAA,SAAS,EAAC;AAA9H;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAzCD;;GAAMtB,a;;KAAAA,a;AA2CN,eAAeA,aAAf","sourcesContent":["import { render } from \"@testing-library/react\";\nimport React, {useState, useEffect} from \"react\";\nimport CardList from \"../components/CardList\";\nimport Hand from \"../components/Hand\";\nimport './App.css';\n\nconst DeckContainer = () => {\n\n    const [deck, setDeck] = useState([])\n    const [hand, setHand] = useState([])\n\n    useEffect(() => {\n        getDeck();\n    }, [])\n\n\n    const getDeck = function(){\n        fetch('https://deckofcardsapi.com/api/deck/new/draw/?count=52')\n        .then(res => res.json())\n        .then(data => setDeck(data.cards))\n    }\n\n    const addToHand = function(card){\n        let newHand = [...hand, card];\n        let uniqueNewHand = Array.from(new Set(newHand));\n        setHand(uniqueNewHand);\n    }\n\n    const removeFromDeck = function(card){\n        let newDeck = deck\n        newDeck.splice(card,1)\n        setDeck(newDeck);\n    }\n\n    const moveFromDeckToHand = function(card){\n        addToHand(card)\n        .then(removeFromDeck(card))\n    }\n\n    return (\n        <div>            \n            <p>Hand:</p>\n            <Hand hand={hand} className=\"deck\"/>\n            <p>Card List:</p>\n            <CardList deck={deck} addToHand={addToHand} removeFromDeck={removeFromDeck} moveFromDeckToHand={moveFromDeckToHand} className=\"deck\"/>\n        </div>\n    )\n}\n\nexport default DeckContainer;"]},"metadata":{},"sourceType":"module"}