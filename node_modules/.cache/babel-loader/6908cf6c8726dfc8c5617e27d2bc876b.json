{"ast":null,"code":"var _jsxFileName = \"/Users/robertpallot/Desktop/Codeclan/codeclan_work/week_07/day_5/deck-of-cards/src/containers/DeckContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport CardList from \"../components/CardList\";\nimport Hand from \"../components/Hand\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DeckContainer = () => {\n  _s();\n\n  const [deck, setDeck] = useState([]);\n  const [hand, setHand] = useState([]);\n  useEffect(() => {\n    getDeck();\n  }, []);\n\n  const getDeck = function () {\n    fetch('https://deckofcardsapi.com/api/deck/new/draw/?count=52').then(res => res.json()).then(data => setDeck(data.cards));\n  };\n\n  const addToHand = function (card) {\n    let newHand = [...hand, card];\n    setHand(newHand);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Hand:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Hand, {\n      hand: hand\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Card List:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CardList, {\n      deck: deck,\n      addToHand: addToHand\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DeckContainer, \"n3Mb4a7D2+XgKGWMi//yKRF69Iw=\");\n\n_c = DeckContainer;\nexport default DeckContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"DeckContainer\");","map":{"version":3,"sources":["/Users/robertpallot/Desktop/Codeclan/codeclan_work/week_07/day_5/deck-of-cards/src/containers/DeckContainer.js"],"names":["React","useState","useEffect","CardList","Hand","DeckContainer","deck","setDeck","hand","setHand","getDeck","fetch","then","res","json","data","cards","addToHand","card","newHand"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;;;AAEA,MAAMC,aAAa,GAAG,MAAM;AAAA;;AAExB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBN,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACO,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZQ,IAAAA,OAAO;AACV,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMA,OAAO,GAAG,YAAU;AACtBC,IAAAA,KAAK,CAAC,wDAAD,CAAL,CACCC,IADD,CACMC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADb,EAECF,IAFD,CAEMG,IAAI,IAAIR,OAAO,CAACQ,IAAI,CAACC,KAAN,CAFrB;AAGH,GAJD;;AAMA,QAAMC,SAAS,GAAG,UAASC,IAAT,EAAc;AAC5B,QAAIC,OAAO,GAAG,CAAC,GAAGX,IAAJ,EAAUU,IAAV,CAAd;AACAT,IAAAA,OAAO,CAACU,OAAD,CAAP;AACH,GAHD;;AAKA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,IAAD;AAAM,MAAA,IAAI,EAAEX;AAAZ;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,QAAD;AAAU,MAAA,IAAI,EAAEF,IAAhB;AAAsB,MAAA,SAAS,EAAEW;AAAjC;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CA5BD;;GAAMZ,a;;KAAAA,a;AA8BN,eAAeA,aAAf","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport CardList from \"../components/CardList\";\nimport Hand from \"../components/Hand\";\n\nconst DeckContainer = () => {\n\n    const [deck, setDeck] = useState([])\n    const [hand, setHand] = useState([])\n\n    useEffect(() => {\n        getDeck();\n    }, [])\n\n    const getDeck = function(){\n        fetch('https://deckofcardsapi.com/api/deck/new/draw/?count=52')\n        .then(res => res.json())\n        .then(data => setDeck(data.cards))\n    }\n\n    const addToHand = function(card){\n        let newHand = [...hand, card]\n        setHand(newHand);\n    }\n\n    return (\n        <div>            \n            <p>Hand:</p>\n            <Hand hand={hand}/>\n            <p>Card List:</p>\n            <CardList deck={deck} addToHand={addToHand}/>\n        </div>\n    )\n}\n\nexport default DeckContainer;"]},"metadata":{},"sourceType":"module"}